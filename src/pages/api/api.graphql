### This file was generated by Nexus Schema
### Do not make changes to this file directly


input ConversationCreateOneWithoutMessageInput {
  connect: ConversationWhereUniqueInput
  create: ConversationCreateWithoutMessageInput
}

input ConversationCreateOneWithoutUserConversationInput {
  connect: ConversationWhereUniqueInput
  create: ConversationCreateWithoutUserConversationInput
}

input ConversationCreateWithoutMessageInput {
  type: String!
  UserConversation: UserConversationCreateManyWithoutConversationInput
}

input ConversationCreateWithoutUserConversationInput {
  Message: MessageCreateManyWithoutConversationInput
  type: String!
}

input ConversationWhereUniqueInput {
  id: Int
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

input MessageCreateManyWithoutConversationInput {
  connect: [MessageWhereUniqueInput!]
  create: [MessageCreateWithoutConversationInput!]
}

input MessageCreateManyWithoutUserInput {
  connect: [MessageWhereUniqueInput!]
  create: [MessageCreateWithoutUserInput!]
}

input MessageCreateWithoutConversationInput {
  content: String!
  timestamp: Int!
  User: UserCreateOneWithoutMessageInput!
}

input MessageCreateWithoutUserInput {
  content: String!
  Conversation: ConversationCreateOneWithoutMessageInput!
  timestamp: Int!
}

input MessageWhereUniqueInput {
  id: Int
}

type Mutation {
  createOneUser(data: UserCreateInput!): User!
  deleteOneUser(where: UserWhereUniqueInput!): User
}

type Post

type Query {
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, orderBy: [UserOrderByInput!]): [User!]!
}

enum SortOrder {
  asc
  desc
}

type User {
  id: Int!
}

input UserConversationCreateManyWithoutConversationInput {
  connect: [UserConversationWhereUniqueInput!]
  create: [UserConversationCreateWithoutConversationInput!]
}

input UserConversationCreateManyWithoutUserInput {
  connect: [UserConversationWhereUniqueInput!]
  create: [UserConversationCreateWithoutUserInput!]
}

input UserConversationCreateWithoutConversationInput {
  User: UserCreateOneWithoutUserConversationInput!
}

input UserConversationCreateWithoutUserInput {
  Conversation: ConversationCreateOneWithoutUserConversationInput!
}

input UserConversationWhereUniqueInput {
  userid_conversationid: UseridConversationidCompoundUniqueInput
}

input UserCreateInput {
  avatarURL: String!
  Message: MessageCreateManyWithoutUserInput
  UserConversation: UserConversationCreateManyWithoutUserInput
  username: String!
}

input UserCreateOneWithoutMessageInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutMessageInput
}

input UserCreateOneWithoutUserConversationInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutUserConversationInput
}

input UserCreateWithoutMessageInput {
  avatarURL: String!
  UserConversation: UserConversationCreateManyWithoutUserInput
  username: String!
}

input UserCreateWithoutUserConversationInput {
  avatarURL: String!
  Message: MessageCreateManyWithoutUserInput
  username: String!
}

input UseridConversationidCompoundUniqueInput {
  conversationid: Int!
  userid: Int!
}

input UserOrderByInput {
  avatarURL: SortOrder
  id: SortOrder
  username: SortOrder
}

input UserWhereUniqueInput {
  id: Int
  username: String
}
